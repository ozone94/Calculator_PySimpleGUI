#!/usr/bin/env python
# title           :Calculator
# description     :calculator constructed by PySimpleGUI library in python language
# author          :จิรพา  ดาดี (Jirapa Dadee) id 6001012630012
# blog            :http://jirapad.blogspot.com/2018/09/blog-post.html?view=mosaic
# python_version  :3.6.1
# Thank you for the knowledge :https://github.com/MikeTheWatchGuy/PySimpleGUI
# Thank you and reference for code and knowledge :https://pysimplegui.readthedocs.io/en/latest/cookbook/
# =============================================================================================================================


import PySimpleGUI as sg

#create button
layout = [
    [sg.Input(size=(31, 1), do_not_clear=True, justification='right', key='input')],
    [sg.ReadFormButton('(', button_color=('black','oldlace')), sg.ReadFormButton(')', button_color=('black','oldlace')), sg.ReadFormButton('Delete', button_color=('black','oldlace')), sg.ReadFormButton('/', button_color=('black','oldlace'))],
    [sg.ReadFormButton('7', button_color=('black','oldlace')), sg.ReadFormButton('8', button_color=('black','oldlace')), sg.ReadFormButton('9', button_color=('black','oldlace')), sg.ReadFormButton('*', button_color=('black','oldlace'))],
    [sg.ReadFormButton('4', button_color=('black','oldlace')), sg.ReadFormButton('5', button_color=('black','oldlace')), sg.ReadFormButton('6', button_color=('black','oldlace')), sg.ReadFormButton('-', button_color=('black','oldlace'))],
    [sg.ReadFormButton('1', button_color=('black','oldlace')), sg.ReadFormButton('2', button_color=('black','oldlace')), sg.ReadFormButton('3', button_color=('black','oldlace')), sg.ReadFormButton('+', button_color=('black','oldlace'))],
    [sg.ReadFormButton('.', button_color=('black','oldlace')), sg.ReadFormButton('0', button_color=('black','oldlace')), sg.ReadFormButton('Clear', button_color=('black','oldlace')), sg.ReadFormButton('=', button_color=('black','oldlace'))]
]

form = sg.FlexForm('Keypad', default_button_element_size=(5, 2), auto_size_buttons=False, grab_anywhere=False, background_color='LightGoldenrod')
form.Layout(layout)

# Loop forever reading the form's values, updating the Input field
keys_entered = ''
while True:
    button, values = form.Read()  # read the form
    if len(keys_entered) <= 20: # output show result not more than 20
        if button is None:  # if the X button clicked, just exit
            break
        elif button in '1234567890().+-*/':
            keys_entered += button  # add the new digit
        elif button is 'Delete':
            keys_entered = keys_entered[:-1] # delete last member in string variable
            form.FindElement('input').Update(keys_entered)  # output the final string
        elif button is 'Clear': # clear keys if clear button delete all member in keys_entered variable
            keys_entered = ''
            form.FindElement('input').Update(keys_entered)
        elif button is '=':
            try: #if error
                keys_entered = str(eval(keys_entered)) #eval calculate string
                form.FindElement('input').Update(keys_entered)
            except:
                pass
    else:
        keys_entered = keys_entered[:20]
    form.FindElement('input').Update(keys_entered)  # change the form to reflect current key string

